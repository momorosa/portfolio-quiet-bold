import { motion } from 'framer-motion'

const GITHUB_D1 = "M11.9999 0C5.37322 0 0 5.37242 0 11.9999C0 17.3016 3.43854 21.7997 8.20608 23.3864C8.80604 23.4977 9.02637 23.1261 9.02637 22.8093C9.02637 22.5232 9.01524 21.5778 9.00984 20.575C5.67145 21.301 4.96721 19.1593 4.96721 19.1593C4.42114 17.7725 3.63471 17.4035 3.63471 17.4035C2.54576 16.6587 3.71674 16.6738 3.71674 16.6738C4.92174 16.7587 5.55603 17.9106 5.55603 17.9106C6.62654 19.7451 8.36346 19.2148 9.04831 18.9082C9.15609 18.1327 9.46688 17.603 9.8101 17.3035C7.14479 17.0005 4.34309 15.9713 4.34309 11.3733C4.34309 10.0633 4.81173 8.99267 5.57924 8.15251C5.45477 7.85014 5.04399 6.62957 5.69577 4.97674C5.69577 4.97674 6.70333 4.65403 8.99601 6.2067C9.95349 5.9409 10.98 5.80768 11.9998 5.80292C13.0196 5.80768 14.047 5.9409 15.0059 6.2067C17.2964 4.65419 18.3026 4.97659 18.3026 4.97659C18.9557 6.62925 18.5451 7.84983 18.4203 8.15203C19.1897 8.99235 19.6552 10.0629 19.6552 11.3728C19.6552 15.9821 16.8481 16.9967 14.1761 17.2938C14.6064 17.6664 14.99 18.3966 14.99 19.5162C14.99 21.1218 14.9763 22.4143 14.9763 22.8093C14.9763 23.1288 15.1921 23.5027 15.8003 23.3851C20.5662 21.7967 24 17.3002 24 12.0001C24 5.37242 18.6266 0 11.9999 0Z"

const GITHUB_D2 = "M4.5461 17.2285C4.51956 17.2883 4.42576 17.3064 4.34039 17.2651C4.25296 17.226 4.20447 17.1446 4.23261 17.0848C4.25852 17.0236 4.35232 17.0066 4.43927 17.0474C4.52639 17.0867 4.57599 17.1687 4.5461 17.2285ZM5.03081 17.7709C4.97358 17.824 4.86151 17.7995 4.78599 17.7156C4.70714 17.6318 4.69268 17.5197 4.7507 17.466C4.80952 17.4131 4.91826 17.4379 4.99663 17.5216C5.07533 17.6062 5.09075 17.7172 5.03081 17.7709ZM5.50392 18.4624C5.43031 18.5138 5.30997 18.4659 5.23557 18.3591C5.16197 18.2523 5.16197 18.1243 5.23716 18.073C5.31188 18.0218 5.43031 18.0682 5.50582 18.1737C5.57895 18.2823 5.57895 18.4101 5.50392 18.4624ZM6.15364 19.1303C6.08782 19.2028 5.94777 19.1832 5.84523 19.0842C5.74031 18.9875 5.71106 18.8502 5.77687 18.7777C5.84364 18.705 5.98449 18.7252 6.08782 18.8238C6.19195 18.9201 6.22359 19.0584 6.15364 19.1303ZM7.04786 19.5177C7.01861 19.6115 6.88412 19.6544 6.74804 19.6142C6.61212 19.5732 6.52325 19.4632 6.55091 19.3683C6.57889 19.2737 6.71465 19.2292 6.85137 19.2719C6.98697 19.3128 7.07616 19.4222 7.04786 19.5177ZM8.02952 19.5892C8.0327 19.6883 7.9176 19.7705 7.77516 19.7721C7.63145 19.7752 7.51524 19.6951 7.51365 19.5978C7.51365 19.4977 7.62652 19.4166 7.7696 19.4142C7.91267 19.411 8.02952 19.491 8.02952 19.5891M8.94361 19.4342C8.96062 19.5306 8.86158 19.6298 8.71978 19.6562C8.58052 19.6819 8.45159 19.6221 8.43395 19.5266C8.41646 19.4276 8.51741 19.3285 8.65651 19.3029C8.79847 19.2781 8.92549 19.3362 8.94361 19.4342Z"

const LINKEDIN_D = "M21.1875 0.407313H1.6875C1.24506 0.40281 0.8189 0.574009 0.502535 0.883344C0.18617 1.19268 0.00543961 1.61488 0 2.05731V21.6361C0.00642335 22.0778 0.187587 22.4991 0.503844 22.8076C0.820102 23.1161 1.2457 23.2868 1.6875 23.2823H21.1875C21.63 23.2858 22.0558 23.114 22.372 22.8045C22.6882 22.495 22.8691 22.0729 22.875 21.6304V2.05169C22.8671 1.61055 22.6854 1.19036 22.3694 0.882449C22.0534 0.574534 21.6287 0.403784 21.1875 0.407313ZM6.78187 19.9073H3.38625V8.98169H6.78187V19.9073ZM5.09438 7.49294C4.70491 7.49331 4.32409 7.37816 4.00009 7.16206C3.67608 6.94595 3.42345 6.63861 3.27415 6.2789C3.12485 5.91919 3.0856 5.52328 3.16135 5.14125C3.2371 4.75923 3.42446 4.40826 3.69972 4.13274C3.97498 3.85721 4.32577 3.66952 4.70773 3.59341C5.08968 3.51729 5.48562 3.55617 5.84547 3.70512C6.20533 3.85408 6.51291 4.10641 6.72932 4.43021C6.94574 4.75401 7.06125 5.13473 7.06125 5.52419C7.06076 5.78304 7.00922 6.03926 6.9096 6.27818C6.80997 6.5171 6.6642 6.73402 6.48064 6.91654C6.29708 7.09905 6.07933 7.24358 5.83984 7.34184C5.60036 7.4401 5.34386 7.49017 5.085 7.48919L5.09438 7.49294ZM19.5 19.9073H16.1044V14.5917C16.1044 13.3261 16.0819 11.6967 14.34 11.6967C12.5981 11.6967 12.3019 13.0767 12.3019 14.5092V19.9073H8.91187V8.98169H12.1669V10.4817H12.2119C12.6656 9.62294 13.7719 8.71731 15.4238 8.71731C18.8625 8.70981 19.5 10.9729 19.5 13.9073V19.9073Z"

const MEDIUM_D = "M4.21001 0.28248C3.65681 0.281294 3.10883 0.389379 2.59751 0.600531C2.08619 0.811683 1.62162 1.12174 1.23044 1.51292C0.839273 1.90409 0.529212 2.36866 0.31806 2.87998C0.106908 3.3913 -0.00117676 3.93928 9.66215e-06 4.49248V20.0725C-0.00117676 20.6257 0.106908 21.1737 0.31806 21.685C0.529212 22.1963 0.839273 22.6609 1.23044 23.052C1.62162 23.4432 2.08619 23.7533 2.59751 23.9644C3.10883 24.1756 3.65681 24.2837 4.21001 24.2825H19.79C20.3432 24.2837 20.8912 24.1756 21.4025 23.9644C21.9138 23.7533 22.3784 23.4432 22.7696 23.052C23.1607 22.6609 23.4708 22.1963 23.682 21.685C23.8931 21.1737 24.0012 20.6257 24 20.0725V18.9795C23.863 18.9925 23.722 18.9995 23.578 18.9995C21.001 18.9995 19.551 16.8535 19.488 14.1675C19.4843 13.9313 19.4917 13.695 19.51 13.4595C19.603 12.2735 19.985 11.2185 20.615 10.4375C20.9888 9.96799 21.4663 9.59148 22.01 9.33748C22.478 9.10048 23.137 8.97048 23.674 8.97048H23.697C23.798 8.97048 23.899 8.97448 24 8.98048V4.49348C24.0013 3.9402 23.8933 3.39211 23.6822 2.88067C23.4712 2.36924 23.1611 1.90455 22.7699 1.51327C22.3787 1.12199 21.9141 0.81184 21.4027 0.600626C20.8914 0.389411 20.3433 0.281293 19.79 0.28248H4.21001ZM4.40801 5.86548H8.57301L12.161 14.3005L15.751 5.86548H19.615V6.01148L19.596 6.01548C18.891 6.17548 18.533 6.41248 18.533 7.26948H18.53L18.533 17.5435C18.593 18.2195 18.957 18.4285 19.596 18.5735L19.616 18.5775V18.7225H14.693V18.5775L14.712 18.5725C15.351 18.4285 15.706 18.2195 15.766 17.5425V7.54948L11.021 18.6995H10.76L6.15001 7.85148V17.2965C6.15001 18.1535 6.50801 18.3905 7.21301 18.5495L7.23301 18.5535V18.7005H4.40501V18.5535L4.42401 18.5495C5.12901 18.3895 5.48901 18.1525 5.48901 17.2965V7.26948C5.48901 6.41248 5.13101 6.17548 4.42501 6.01548L4.40701 6.01148L4.40801 5.86548ZM23.658 9.53348C22.572 9.55648 21.925 10.8565 21.845 12.6575H24V9.58048C23.8884 9.55054 23.7735 9.53475 23.658 9.53348ZM21.796 13.1655C21.696 14.9215 22.656 16.4045 24 16.7995V13.1655H21.796Z"

export default function Social({
    direction = "col",
    gap = 6,
    hoverMode = "color", // "color" | "opacity"
    baseColor = "#747474",
    hoverColor = "var(--yellow-mellow, #CF9033)",
    size = 24,
    scaleHover = 1.05,   
    scaleTap   = 0.985,
    links = [
        { href: "https://github.com/momorosa", label: "GitHub", viewBox: "0 0   24 24", paths: [GITHUB_D1, GITHUB_D2] },
        { href: "https://www.linkedin.com/in/rosachoi7/", label: "LinkedIn",    viewBox: "0 0 23 24", d: LINKEDIN_D },
        { href: "https://medium.com/@momorosa.design", label: "Medium",     viewBox: "0 0 24 25", d: MEDIUM_D },
    ],
}) {
    const dirClasses = direction === "row" ? "flex-row" : "flex-col"

    return (
        <div className={`flex ${dirClasses} items-center justify-center`} style={{ gap }}>
            {links.map((item) => (
                <SocialIcon
                    key={item.href}
                    {...item}
                    size={size}
                    hoverMode={hoverMode}
                    baseColor={baseColor}
                    hoverColor={hoverColor}
                    scaleHover={scaleHover}
                    scaleTap={scaleTap}
                />
            ))}
        </div>
    )
}

function SocialIcon({
    href,
    label,
    d,
    paths,
    viewBox,
    size,
    hoverMode,
    baseColor,
    hoverColor,
    scaleHover,
    scaleTap,
}) {
  // Anchor only controls opacity mode so the hit area doesnâ€™t scale
    const linkHover =
        hoverMode === "opacity"
            ? { opacity: 0.6 }
            : { opacity: 1 }

    return (
        <motion.a
            href={href}
            target="_blank"
            rel="noopener noreferrer"
            aria-label={label}
            className="inline-flex p-2"
            initial={{ opacity: 1 }}
            whileHover={linkHover}
            transition={{ duration: 0.2, ease: "easeOut" }}
        >
            <motion.svg
                width={size}
                height={size}
                viewBox={viewBox}
                initial={{ color: baseColor, scale: 1 }}
                whileHover={{
                    scale: scaleHover,
                    // color change only when in color mode
                    ...(hoverMode === "color" ? { color: hoverColor } : {}),
                }}
                whileTap={{ scale: scaleTap }}
                transition={{ type: "spring", stiffness: 300, damping: 24 }}
                style={{
                    display: "block",
                    transformBox: "fill-box",
                    transformOrigin: "50% 50%",
                }}
            >
                {paths?.length
                    ? paths.map((pd, i) => <path key={i} d={pd} fill="currentColor" />)
                    : <path d={d} fill="currentColor" />
                }
            </motion.svg>
        </motion.a>
    )
}